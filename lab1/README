We implemented transformations, rotation and scaling and object loading. We did not implement any shortcuts/bonus assignments.

We made three additional classes: cube, pyramid and object, which in we extracted the model of the cube, pyramid and imported object.

We put all the code that used OpenGl-functions, in the mainView class. We were not sure if it would be a good idea also moving all the rendering logic related to specific object from mainView to its subclasses. We tried it but were not sure how to use OpenGl-functions from multiple classes in the right way.

We consider model transformation matrices in the mainView class multiplying rotation, scaling, and translation matrices. After that, we passed the transformation matrix to the vertex shader program. Similarly, we deal with the projection matrix.

There was a lot of confusion with the projection transformation. We were not able to understand how it works in OpenGl. We were mixed with coordinate systems. For example, we expected that since the objects are located in space where z<0 and the camera is located to (0,0,0), we would have to set near and far plane somewhere z<0. In reality, we had to set near and far plane so that z>0. Also top, left, bottom and right plane locating were irrational, and we did not understand how they should work. It would be better being more information provided in the assessment about that problem.

This is a README file

When submitting your assignment, describe (briefly) the changes you made and what difficulties you encountered in this file.

Also describe what controls (key short-cuts, mouse clicks, mouse movement etc) and possible bonus assignments you implemented, so we can check them more easily.

If you have any suggestions/feedback for improving the practical assignments or support from teaching assistants, you may include it here OR post in anonymously on Nestor under Feedback.

